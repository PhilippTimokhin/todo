{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","todos","setTodos","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","useEffect","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","id","onSubmit","e","preventDefault","newTodo","Date","getTime","text","completed","concat","type","onChange","target","value","map","className","checked","updatedTodos","toggleComplete","onClick","submitEdits","filter","deleteTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAwGeA,EArGH,WAAO,IAAD,EACSC,IAAMC,SAAS,IADxB,mBACVC,EADU,KACHC,EADG,OAEOH,IAAMC,SAAS,IAFtB,mBAEVG,EAFU,KAEJC,EAFI,OAGqBL,IAAMC,SAAS,MAHpC,mBAGVK,EAHU,KAGGC,EAHH,OAIqBP,IAAMC,SAAS,IAJpC,mBAIVO,EAJU,KAIGC,EAJH,KAyDjB,OAnDAT,IAAMU,WAAU,WACf,IAAMC,EAAOC,aAAaC,QAAQ,SAC5BC,EAAcC,KAAKC,MAAML,GAC3BG,GACHX,EAASW,KAER,IAEHd,IAAMU,WAAU,WACf,IAAMC,EAAOI,KAAKE,UAAUf,GAC5BU,aAAaM,QAAQ,QAASP,KAC5B,CAACT,IAyCH,sBAAKiB,GAAG,YAAR,UACC,2CACA,uBAAMC,SAzCR,SAAsBC,GACrBA,EAAEC,iBAEF,IAAMC,EAAU,CACfJ,IAAI,IAAIK,MAAOC,UACfC,KAAMtB,EACNuB,WAAW,GAEZxB,EAAS,YAAID,GAAO0B,OAAOL,IAC3BlB,EAAQ,KAgCP,UACC,uBACCwB,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOhB,EAAQgB,EAAEU,OAAOC,QAClCA,MAAO5B,IAER,wBAAQyB,KAAK,SAAb,yBAEA3B,EAAM+B,KAAI,SAAC7B,GAAD,OACV,sBAAmB8B,UAAU,OAA7B,UACC,sBAAKA,UAAU,YAAf,UACC,uBACCL,KAAK,WACLV,GAAG,YACHgB,QAAS/B,EAAKuB,UACdG,SAAU,kBAvChB,SAAwBX,GACvB,IAAIiB,EAAe,YAAIlC,GAAO+B,KAAI,SAAC7B,GAIlC,OAHIA,EAAKe,KAAOA,IACff,EAAKuB,WAAavB,EAAKuB,WAEjBvB,KAERD,EAASiC,GAgCYC,CAAejC,EAAKe,OAEpCf,EAAKe,KAAOb,EACZ,uBACCuB,KAAK,OACLC,SAAU,SAACT,GAAD,OAAOZ,EAAeY,EAAEU,OAAOC,UAG1C,8BAAM5B,EAAKsB,UAGb,sBAAKQ,UAAU,eAAf,UACE9B,EAAKe,KAAOb,EACZ,wBAAQgC,QAAS,kBA1CvB,SAAqBnB,GACpB,IAAMiB,EAAe,YAAIlC,GAAO+B,KAAI,SAAC7B,GAIpC,OAHIA,EAAKe,KAAOA,IACff,EAAKsB,KAAOlB,GAENJ,KAERD,EAASiC,GACT7B,EAAe,MAkCagC,CAAYnC,EAAKe,KAAxC,0BAEA,wBAAQmB,QAAS,kBAAM/B,EAAeH,EAAKe,KAA3C,kBAGD,wBAAQmB,QAAS,kBA9DtB,SAAoBnB,GACnB,IAAIiB,EAAe,YAAIlC,GAAOsC,QAAO,SAACpC,GAAD,OAAUA,EAAKe,KAAOA,KAC3DhB,EAASiC,GA4DkBK,CAAWrC,EAAKe,KAAvC,yBAxBQf,EAAKe,WC5DJuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a202e479.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n\tconst [todos, setTodos] = React.useState([]);\n\tconst [todo, setTodo] = React.useState(\"\");\n\tconst [todoEditing, setTodoEditing] = React.useState(null);\n\tconst [editingText, setEditingText] = React.useState(\"\");\n\n\tReact.useEffect(() => {\n\t\tconst json = localStorage.getItem(\"todos\");\n\t\tconst loadedTodos = JSON.parse(json);\n\t\tif (loadedTodos) {\n\t\t\tsetTodos(loadedTodos);\n\t\t}\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tconst json = JSON.stringify(todos);\n\t\tlocalStorage.setItem(\"todos\", json);\n\t}, [todos]);\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst newTodo = {\n\t\t\tid: new Date().getTime(),\n\t\t\ttext: todo,\n\t\t\tcompleted: false,\n\t\t};\n\t\tsetTodos([...todos].concat(newTodo));\n\t\tsetTodo(\"\");\n\t}\n\n\tfunction deleteTodo(id) {\n\t\tlet updatedTodos = [...todos].filter((todo) => todo.id !== id);\n\t\tsetTodos(updatedTodos);\n\t}\n\n\tfunction toggleComplete(id) {\n\t\tlet updatedTodos = [...todos].map((todo) => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.completed = !todo.completed;\n\t\t\t}\n\t\t\treturn todo;\n\t\t});\n\t\tsetTodos(updatedTodos);\n\t}\n\n\tfunction submitEdits(id) {\n\t\tconst updatedTodos = [...todos].map((todo) => {\n\t\t\tif (todo.id === id) {\n\t\t\t\ttodo.text = editingText;\n\t\t\t}\n\t\t\treturn todo;\n\t\t});\n\t\tsetTodos(updatedTodos);\n\t\tsetTodoEditing(null);\n\t}\n\n\treturn (\n\t\t<div id='todo-list'>\n\t\t\t<h1>Todo List</h1>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tonChange={(e) => setTodo(e.target.value)}\n\t\t\t\t\tvalue={todo}\n\t\t\t\t/>\n\t\t\t\t<button type='submit'>Add Todo</button>\n\t\t\t</form>\n\t\t\t{todos.map((todo) => (\n\t\t\t\t<div key={todo.id} className='todo'>\n\t\t\t\t\t<div className='todo-text'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tid='completed'\n\t\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\t\tonChange={() => toggleComplete(todo.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{todo.id === todoEditing ? (\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tonChange={(e) => setEditingText(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>{todo.text}</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='todo-actions'>\n\t\t\t\t\t\t{todo.id === todoEditing ? (\n\t\t\t\t\t\t\t<button onClick={() => submitEdits(todo.id)}>Submit Edits</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<button onClick={() => setTodoEditing(todo.id)}>Edit</button>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<button onClick={() => deleteTodo(todo.id)}>Delete</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}